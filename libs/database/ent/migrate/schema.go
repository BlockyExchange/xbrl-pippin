// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "address", Type: field.TypeString, Size: 65},
		{Name: "account_index", Type: field.TypeInt},
		{Name: "work", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "wallet_id", Type: field.TypeUUID},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "accounts_wallets_accounts",
				Columns:    []*schema.Column{AccountsColumns[5]},
				RefColumns: []*schema.Column{WalletsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "account_wallet_id",
				Unique:  false,
				Columns: []*schema.Column{AccountsColumns[5]},
			},
			{
				Name:    "account_address_account_index",
				Unique:  true,
				Columns: []*schema.Column{AccountsColumns[1], AccountsColumns[2]},
			},
		},
	}
	// AdhocAccountsColumns holds the columns for the "adhoc_accounts" table.
	AdhocAccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AdhocAccountsTable holds the schema information for the "adhoc_accounts" table.
	AdhocAccountsTable = &schema.Table{
		Name:       "adhoc_accounts",
		Columns:    AdhocAccountsColumns,
		PrimaryKey: []*schema.Column{AdhocAccountsColumns[0]},
	}
	// BlocksColumns holds the columns for the "blocks" table.
	BlocksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// BlocksTable holds the schema information for the "blocks" table.
	BlocksTable = &schema.Table{
		Name:       "blocks",
		Columns:    BlocksColumns,
		PrimaryKey: []*schema.Column{BlocksColumns[0]},
	}
	// WalletsColumns holds the columns for the "wallets" table.
	WalletsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "seed", Type: field.TypeString, Unique: true, Size: 128},
		{Name: "representative", Type: field.TypeString, Nullable: true, Size: 65},
		{Name: "encrypted", Type: field.TypeBool, Default: false},
		{Name: "work", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// WalletsTable holds the schema information for the "wallets" table.
	WalletsTable = &schema.Table{
		Name:       "wallets",
		Columns:    WalletsColumns,
		PrimaryKey: []*schema.Column{WalletsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		AdhocAccountsTable,
		BlocksTable,
		WalletsTable,
	}
)

func init() {
	AccountsTable.ForeignKeys[0].RefTable = WalletsTable
	AccountsTable.Annotation = &entsql.Annotation{
		Table: "accounts",
	}
	WalletsTable.Annotation = &entsql.Annotation{
		Table: "wallets",
	}
}
